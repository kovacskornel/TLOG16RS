import com.sun.webkit.plugin.Plugin
import com.bmuschko.gradle.docker.tasks.image.*
import com.bmuschko.gradle.docker.tasks.container.*

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.4.0'
    id 'org.sonarqube' version '2.1'
    id "com.bmuschko.docker-java-application" version "2.6.6"
}

apply plugin: 'java'
apply plugin: 'application'


sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

scmVersion {
    versionCreator 'versionWithBranch'
}
project.version = scmVersion.version

project.ext {
    dropwizardVersion = '0.8.2'   
}

if (!hasProperty('mainClass')) {
    ext.mainClass = 'com.kovacskornel.tlog16rs.TLOG16RSApplication'
}


mainClassName = "com.kovacskornel.tlog16rs.TLOG16RSApplication"

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.bmuschko:gradle-docker-plugin:2.6.6'
    runtime 'com.bmuschko:gradle-docker-plugin:2.6.6'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.16.10'
    compile group: 'io.dropwizard', name: 'dropwizard-core', version: dropwizardVersion
    compile group: 'eu.appsatori', name: 'gradle-fatjar-plugin', version: '0.2'
    compile group: 'org.avaje.ebeanorm', name: 'avaje-ebeanorm', version: '7.1.1'
    compile group: 'org.avaje.ebeanorm', name: 'avaje-ebeanorm-agent', version: '4.9.1'
    compile group: 'org.avaje', name: 'avaje-agentloader', version: '2.1.2'
    testCompile group: 'junit', name: 'junit', version: '4.10'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '1.5.2'
    compile group: 'org.liquibase', name: 'liquibase-core', version: '3.5.3'
}

docker {
	url = "unix:///var/run/docker.sock";
}

task createDockerfile(type: Dockerfile) {   
    doFirst {
        copy {
            from "src/dist"
            into "build/dist"
        }
    }

    dependsOn = [':distTar']
    	destFile = project.file('build/Dockerfile')
        from "frolvlad/alpine-oraclejdk8:slim"
    	maintainer 'Andras Gazdag "agazdag@precognox.com"'

    	def appFolder = "/"

		runCommand "apk update && apk add bash"
	
        addFile "distributions/${project.distTar.archiveName}", "/tmp"
        runCommand "mv /tmp/${project.applicationName}-${project.version} /${project.applicationName}"

    	workingDir  "${appFolder}"
        defaultCommand  "/${project.applicationName}/bin/${project.applicationName}", "server", "${project.applicationName}/config.yml"
}

dockerBuildImage {
	dependsOn createDockerfile
	inputDir = createDockerfile.destFile.parentFile
	tag = "trainingproject/${project.name.toLowerCase()}"
}

run {
 args 'server', 'src/main/resources/config.yml'
}

